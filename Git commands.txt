
### Working tree

git rm --cached <file>                                  # Stop tracking a file
git rm <submodule>                                      # Remove a submodule completely
                                                        # Ignore Crashlytics
find vendor/Crashlytics.framework -type f -print0 | xargs -0 git update-index --[no-]assume-unchanged


### Merge & Rebase

git rebase --onto master <parent of oldest> <newest>    # Rebase range of commits
git merge --ff-only master                              # Brings a merged branch up-to-date with master


### Push

git push origin tag 1.0.0                               # Push a tag
git push -u origin <branch>                             # Push and set the remote tracking branch


### Delete

git push --delete origin <branch>                       # Delete remote branch
git remote prune origin                                 # Delete local branches that are no longer on the origin
git push origin :1.0.0                                  # Delete a tag from remote

for t in `git tag`                                      # Delete all tags
do
    git tag -d $t
done


### Show

git show <rev>:<file>                                   # Show file from revision
git blame <commit>^ -- <files>                          # Show blame of blame
git branch -vv                                          # Show tracking branches
git branch --no-merge                                   # Show unmerged branches
                                                        # Show unpushed branches
git log --branches --not --remotes --simplify-by-decoration --decorate --oneline
                                                        # Show command line graph (lg)
git log --graph --pretty=format:'%C(red)%h %C(reset)-%C(green)%d %C(reset)%s %C(magenta)(%cr) %C(bold blue)<%an>%C(reset)'
git lg origin/release/4.0.9..origin/release/4.1.0       # Show changes between branches
git log -S<text>                                        # Search history for term
                                                        # Show branches by date
for k in `git branch|perl -pe s/^..//`
do
    echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k|head -n 1`\\t$k
done|sort -r


### Cherry-pick

# Cherry-pick with manual file rename
# https://stackoverflow.com/questions/32843857/git-cherry-pick-with-target-file-renamed
git format-patch <commit> -1
# edit paths in 0001.patch
git am 0001.patch


### Config

git config -f <config file> alias.<alias> '<command>'	# Create an alias
git config --get-regexp '^alias\.'                      # List aliases


### Other

# Converting a directory into a submodule
# From http://stackoverflow.com/questions/17413493/create-a-submodule-repository-from-a-folder-and-keep-its-git-commit-history
git clone <git repository A url>
cd <git repository A>
git remote rm origin
git filter-branch --subdirectory-filter <directory B> -- --all
# remove all tags
git remote add origin <git repository B url> # from GitHub
git push -u origin master

cd <git repository A (again)>
git rm -r <directory B>
git submodule add -b master <git repository B url>



# Converting a submodule into a directory
# From http://x3ro.de/2013/09/01/Integrating-a-submodule-into-the-parent-repository.html
git clone git@git.inkling.com:ios/inkling-ipad.git
git clone git@git.inkling.com:ios/S9TestUtils.git

cd S9TestUtils
../git-rewrite-to-subfolder

cd ../inkling-ipad
rm -r S9TestUtils # should be an empty directory
vim .gitmodules
git add --all
git commit
git remote add S9TestUtils ../S9TestUtils
git fetch S9TestUtils
git merge -s ours --no-commit --allow-unrelated-histories S9TestUtils/master
git clone git@git.inkling.com:ios/S9TestUtils.git
rm -rf S9TestUtils/.git
git add S9TestUtils
git commit
